### Data Base settings. ###
# Sets for connection DB.
db_driver_name=org.postgresql.Driver
db_url=jdbc:postgresql://localhost:5432/web
db_username=postgres
db_password=POSTGRESQL

# SQL create structure.

SQL_CREATE_TABLE_ROLES=CREATE TABLE roles (id SERIAL PRIMARY KEY, name CHARACTER VARYING (100) NOT NULL, UNIQUE(name))
SQL_INSERT_TABLE_ROLES_00=INSERT INTO roles (name) VALUES ('User')
SQL_INSERT_TABLE_ROLES_01=INSERT INTO roles (name) VALUES ('Mandator')
SQL_INSERT_TABLE_ROLES_02=INSERT INTO roles (name) VALUES ('Admin')

SQL_CREATE_TABLE_USERS=CREATE TABLE users (id SERIAL PRIMARY KEY, name CHARACTER VARYING (100) NOT NULL, login CHARACTER VARYING (100) NOT NULL, password CHARACTER VARYING (100) NOT NULL, email CHARACTER VARYING (100), create_date TIMESTAMP NOT NULL DEFAULT NOW(), role_id INTEGER REFERENCES roles(id))
SQL_INSERT_TABLE_USERS_00=INSERT INTO users (name, login, password, email, role_id) VALUES ('UserName', 'UserLogin', 'UserPassword', 'User@mail.ru', (SELECT id FROM roles WHERE name = 'User'))
SQL_INSERT_TABLE_USERS_01=INSERT INTO users (name, login, password, email, role_id) VALUES ('MandatorName', 'MandatorLogin', 'MandatorPassword', 'Mandator@mail.ru', (SELECT id FROM roles WHERE name = 'Mandator'))
SQL_INSERT_TABLE_USERS_02=INSERT INTO users (name, login, password, email, role_id) VALUES ('AdminName', 'AdminLogin', 'AdminPassword', 'Admin@mail.ru', (SELECT id FROM roles WHERE name = 'Admin'))

SQL_CREATE_TABLE_ADDRESSES=CREATE TABLE addresses (id SERIAL PRIMARY KEY, place CHARACTER VARYING (500) NOT NULL, user_id INTEGER REFERENCES users(id), UNIQUE (user_id))
SQL_INSERT_TABLE_ADDRESSES_00=INSERT INTO addresses (place, user_id) VALUES ('Chicago', (SELECT id FROM users WHERE name = 'UserName'))
SQL_INSERT_TABLE_ADDRESSES_01=INSERT INTO addresses (place, user_id) VALUES ('London', (SELECT id FROM users WHERE name = 'MandatorName'))
SQL_INSERT_TABLE_ADDRESSES_02=INSERT INTO addresses (place, user_id) VALUES ('Prague', (SELECT id FROM users WHERE name = 'AdminName'))

SQL_CREATE_TABLE_MUSIC_TYPES=CREATE TABLE music_types (id SERIAL PRIMARY KEY, name CHARACTER VARYING (100) NOT NULL, UNIQUE(name))
SQL_INSERT_TABLE_MUSIC_TYPES_00=INSERT INTO music_types (name) VALUES ('RAP')
SQL_INSERT_TABLE_MUSIC_TYPES_01=INSERT INTO music_types (name) VALUES ('ROCK')
SQL_INSERT_TABLE_MUSIC_TYPES_02=INSERT INTO music_types (name) VALUES ('DISCO')

SQL_CREATE_TABLE_USERS_HAS_MUSIC_TYPES=CREATE TABLE users_has_music_types (id SERIAL PRIMARY KEY, user_id INTEGER REFERENCES users(id), music_type_id INTEGER REFERENCES music_types(id), UNIQUE(user_id, music_type_id))
SQL_INSERT_TABLE_USERS_HAS_MUSIC_TYPES_00=INSERT INTO users_has_music_types (user_id, music_type_id) VALUES ((SELECT id FROM users WHERE name = 'UserName'), (SELECT id FROM music_types WHERE name = 'RAP'))
SQL_INSERT_TABLE_USERS_HAS_MUSIC_TYPES_01=INSERT INTO users_has_music_types (user_id, music_type_id) VALUES ((SELECT id FROM users WHERE name = 'UserName'), (SELECT id FROM music_types WHERE name = 'ROCK'))
SQL_INSERT_TABLE_USERS_HAS_MUSIC_TYPES_02=INSERT INTO users_has_music_types (user_id, music_type_id) VALUES ((SELECT id FROM users WHERE name = 'MandatorName'), (SELECT id FROM music_types WHERE name = 'ROCK'))
SQL_INSERT_TABLE_USERS_HAS_MUSIC_TYPES_03=INSERT INTO users_has_music_types (user_id, music_type_id) VALUES ((SELECT id FROM users WHERE name = 'AdminName'), (SELECT id FROM music_types WHERE name = 'DISCO'))


# SQL query.

SQL_INSERT_TABLE_ROLES=INSERT INTO roles (name) VALUES (?)
SQL_SELECT_TABLE_ROLES=SELECT id, name FROM roles
SQL_SELECT_TABLE_ROLES_BY_ID=SELECT id, name FROM roles WHERE id=?
SQL_UPDATE_TABLE_ROLES=UPDATE roles SET name=? WHERE id=?
SQL_DELETE_TABLE_ROLES=DELETE FROM roles WHERE id=?

SQL_INSERT_TABLE_USERS=INSERT INTO users (name, login, password, email, role_id) VALUES (?, ?, ?, ?, ?)
SQL_SELECT_TABLE_USERS=SELECT id, name, login, password, email, role_id FROM users
SQL_SELECT_TABLE_USERS_BY_ID=SELECT id, name, login, password, email, role_id FROM users WHERE id=?
SQL_UPDATE_TABLE_USERS=UPDATE users SET name=?, login=?, password=?, email=?, role_id=? WHERE id=?
SQL_DELETE_TABLE_USERS=DELETE FROM users WHERE id=?

SQL_INSERT_TABLE_ADDRESSES=INSERT INTO addresses (place, user_id) VALUES (?, ?)
SQL_SELECT_TABLE_ADDRESSES=SELECT id, place, user_id FROM addresses
SQL_SELECT_TABLE_ADDRESSES_BY_ID=SELECT id, place, user_id FROM addresses WHERE id=?
SQL_UPDATE_TABLE_ADDRESSES=UPDATE addresses SET place=?, user_id=? WHERE id=?
SQL_DELETE_TABLE_ADDRESSES=DELETE FROM addresses WHERE id=?

SQL_INSERT_TABLE_MUSIC_TYPES=INSERT INTO music_types (name) VALUES (?)
SQL_SELECT_TABLE_MUSIC_TYPES=SELECT id, name FROM music_types
SQL_SELECT_TABLE_MUSIC_TYPES_BY_ID=SELECT id, name FROM music_types WHERE id=?
SQL_UPDATE_TABLE_MUSIC_TYPES=UPDATE music_types SET name=? WHERE id=?
SQL_DELETE_TABLE_MUSIC_TYPES=DELETE FROM music_types WHERE id=?

SQL_INSERT_TABLE_USERS_HAS_MUSIC_TYPES=INSERT INTO users_has_music_types (user_id, music_type_id) VALUES (?, ?)
SQL_SELECT_TABLE_USERS_HAS_MUSIC_TYPES=SELECT id, user_id, music_type_id FROM users_has_music_types
SQL_SELECT_TABLE_USERS_HAS_MUSIC_TYPES_BY_ID=SELECT id, user_id, music_type_id FROM users_has_music_types WHERE id=?
SQL_UPDATE_TABLE_USERS_HAS_MUSIC_TYPES=UPDATE users_has_music_types SET user_id=?, music_type_id=? WHERE id=?
SQL_DELETE_TABLE_USERS_HAS_MUSIC_TYPES=DELETE FROM users_has_music_types WHERE id=?